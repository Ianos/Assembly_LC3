.ORIG	x3000
LD R0,TOTALA
LD R2,CPOSA
LDR R0,R0,#0
ST R0,TOTAL ; O R0 EHEI TI TIMI STI MEM ADRESS x5000
ST R2,CPOS  ; O R2 EXEI TI TIMI STI MEM ADRESS x5001
AND R0,R0,#0 ; ARHIKOPOIO TON  R0
ST R0,MOVES
LD R1,TOTAL
NOT R1,R1
ADD R1,R1,#1
ADD R0,R0,R1
NEXTWORD BRz DONE ; TSEKARO AN MOVES - TOTAL = 0
LD R2,CPOS
JSR WCOUNT ; R0 WILL NOW HAVE WORD LENGTH
ST R0,LEN
LD R2,CPOS
LDR R5,R2,#0 ; R5 HAS FIRST LETTER OF THIS WORD
LOOP BRz FINITO
LD R1,LEN ; R1 HAS LENGTH OF WORD WHICH IS CRYPTO-KEY
ADD R0,R5,#0 ;
JSR XOR ; R3 HAS CURRENT RESULT BUT R1 HAS BEEN TAMPERED SO WE NEED TO LOAD IT AGAIN
LD R1,LEN
LD R6,SF ; R6 = 65
NOT R6,R6
ADD R6,R6,#1
ADD R3,R3,R6 ; R3 = R3 - 65
LD R6,TS ; R6 = 26
NOT R1,R1
ADD R1,R1,#1
ADD R3,R3,R6
ADD R3,R3,R1 ; R3 =R3 + 26 - R1
ADD R0,R3,#0 ; R0 HAS RESULT TILL NOW
ADD R1,R6,#0
JSR MOD ; RO HAS THE ANSWER
LD R6,SF
ADD R0,R0,R6 ; FINAL VALUE 
LD R2,CPOS
STR R0,R2,#0 ; STORE THE DECRYPTED LETTER IN ITS MEMORY ADDR
ADD R2,R2,#1 ; INCREMENT MEMORY ADRESS BY ONE SO THAT ITS THE NEXT LETTER'S ADDRESS
ST R2,CPOS
LD R6,MOVES ; R6 HAS NUMBER OF LETTERS VISITED SO FAR 
ADD R6,R6,#1 ; WE INCREMENT THIS NUMBER
ST R6,MOVES ; AND STORE IT BACK
LDR R5,R2,#0 ; LOAD NEXT LETTER
BR LOOP ; AND BACK TO THE TOP UNTIL WE ARE FINISHED WITH THIS WORD
FINITO ADD R2,R2,#1 ; WE WILL MOVE HERE WHEN WE ENCOUNTER END OF WORD SO WE INCREMENT R2(CPOS) TO MOVE TO NEXT ONE AND MOVES ALSO CAUSE WE VISITED ANOTHER LETTER
ST R2,CPOS ; WE STORE R2 TO CPOS SO WE DO NOT HAVE ANY PROBLEMS 
LD R6,MOVES
ADD R6,R6,#1
ST R6,MOVES
LD R1,TOTAL
NOT R1,R1
ADD R1,R1,#1
ADD R6,R6,R1
BR NEXTWORD
DONE 
HALT

WCOUNT AND R0,R0,#0  ; Καθαρίζουμε τον R0 και τον αρχικοποιούμε σα μετρητή μήκους
LDR R1,R2,#0 ;φορτώνουμε στον R1 το πρώτο γράμμα της συμβολοσειράς
LOOPA BRz FINISH ;Ελέγχουμε αν το γράμμα είναι το τέλος της συμβολοσειράς x0000
ADD R0,R0,#1 ;Αν όχι αυξάνουμε το μήκος κατα ένα
ADD R2,R2,#1 ;Προσθέτουμε ένα στον R2 ώστε να πάρουμε τη διεύθυνση του επόμενου γράμματος της λέξης στη μνήμη 
LDR R1,R2,#0 ;Φορτώνουμε το γράμμα αυτό στον R1
BR LOOPA ;επαναλαμβάνουμε τη διαδικασία
FINISH RET ;Ο R0 έχει την απάντηση KAI EPISTREFOUME STI ROI TOU PROGRAMMATOS

XOR ADD R2,R0,#0
ADD R4,R1,#0
NOT R2,R2 ;Ston R2 to NOT R0
NOT R4,R4 ;Ston R4 to NOT R1
AND R0,R0,R4; R0 AND (NOT R1)
AND R1,R1,R2; R1 AND (NOT R0)
NOT R0,R0 ; NOT(R0 AND (NOT R1))
NOT R1,R1 ; NOT(R1 AND (NOT R0))
AND R3,R0,R1 ; {NOT(R0 AND (NOT R1))}AND{NOT(R1 AND (NOT R0))}
NOT R3,R3 ; NOT{NOT(R0 AND (NOT R1))}AND{NOT(R1 AND (NOT R0))}=R0 XOR R1
RET

MOD ADD R3,R1,#0 ; O R3 pairnei ti timi tou diereti
NOT R1,R1 ; Proetoimasia afairesis
ADD R1,R1,#1
ADD R0,R0,R1
LOOPB	BRn EXIT ;An paro pote R0-R1<0 simainei oti R0=R1 mod arhiko R0
ADD R0,R0,R1
BR LOOPB
EXIT ADD R0,R0,R3 ;Epeidi eho kanei tin afairesi prostheto to R3 gia na paro to ipoloipo
RET

TOTALA .FILL x5000
CPOSA  .FILL x5001
MOVES .BLKW #1
SF    .FILL #65
TS    .FILL #26
LEN   .BLKW #1
TOTAL .BLKW #1
CPOS  .BLKW #1

.END











